{"version":3,"sources":["components/Header.js","Shapes.js","components/TodoItem.js","components/TodoList.js","components/Main.js","components/TodoFilter.js","components/Footer.js","App.js","index.js"],"names":["Header","PropTypes","shape","todos","arrayOf","allCompleted","bool","onCheck","func","onDelete","checkAll","todosLength","number","children","string","onClick","filterType","currentFilter","setFilter","onClear","addTodo","state","title","handleInputChange","event","setState","target","value","onSubmit","preventDefault","replace","props","id","Date","now","completed","this","className","type","placeholder","onChange","React","Component","TodoItem","todo","classnames","checked","htmlFor","TodoList","map","todoItem","key","Main","TodoFilter","href","selected","toLowerCase","Footer","todosLeft","filter","item","length","some","filters","all","active","App","prevState","checkSingleTodo","todoId","every","checkAllTodos","deleteTodo","clearCompletedTodos","visibleTodos","filteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bcf6fee.chunk.js","sourcesContent":["import React from 'react';\nimport { HeaderShape } from '../Shapes';\n\nclass Header extends React.Component {\n  state = {\n    title: '',\n  };\n\n  handleInputChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState(({ title }) => {\n      if (!title.replace(/^\\s+/, '')) {\n        return { title };\n      }\n\n      const { addTodo } = this.props;\n\n      addTodo({\n        title,\n        id: Date.now(),\n        completed: false,\n      });\n\n      return { title: '' };\n    });\n  };\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>Todos</h1>\n        <form onSubmit={this.onSubmit}>\n          <input\n            className=\"new-todo\"\n            type=\"text\"\n            value={title}\n            placeholder=\"What needs to be done?\"\n            onChange={this.handleInputChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = HeaderShape.isRequired;\n\nexport default Header;\n","import PropTypes from 'prop-types';\n\nexport const MainShape = PropTypes.shape({\n  todos: PropTypes.arrayOf(PropTypes.shape({})),\n  allCompleted: PropTypes.bool,\n  onCheck: PropTypes.func,\n  onDelete: PropTypes.func,\n  checkAll: PropTypes.func,\n  todosLength: PropTypes.number,\n});\n\nexport const TodoFilterShape = PropTypes.shape({\n  children: PropTypes.string,\n  onClick: PropTypes.func,\n  filterType: PropTypes.string,\n});\n\nexport const FooterShape = PropTypes.shape({\n  currentFilter: PropTypes.string,\n  setFilter: PropTypes.func,\n  onClear: PropTypes.func,\n});\n\nexport const HeaderShape = PropTypes.shape({\n  addTodo: PropTypes.func,\n});\n\nexport const TodoItemShape = PropTypes.shape({\n  onCheck: PropTypes.func,\n  onDelete: PropTypes.func,\n});\n\nexport const TodoListShape = PropTypes.shape({\n  onCheck: PropTypes.func,\n  onDelete: PropTypes.func,\n});\n","import React from 'react';\nimport classnames from 'classnames';\nimport { TodoItemShape } from '../Shapes';\n\nconst TodoItem = ({ todo, onCheck, onDelete }) => (\n  <li className={classnames({ completed: todo.completed })}>\n    <div className=\"view\">\n      <input\n        id={todo.id}\n        className=\"toggle\"\n        type=\"checkbox\"\n        checked={todo.completed}\n        onChange={() => onCheck(todo.id)}\n      />\n      <label htmlFor={todo.id}>{todo.title}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => onDelete(todo.id)}\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = TodoItemShape.isRequired;\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\nimport { TodoListShape } from '../Shapes';\n\nconst TodoList = ({ todos, onCheck, onDelete }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todoItem => (\n      <TodoItem\n        todo={todoItem}\n        key={todoItem.id}\n        onCheck={onCheck}\n        onDelete={onDelete}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = TodoListShape.isRequired;\n\nexport default TodoList;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport { MainShape } from '../Shapes';\n\nconst Main = (props) => {\n  const {\n    todos,\n    allCompleted,\n    onCheck,\n    onDelete,\n    checkAll,\n    todosLength,\n  } = props;\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onChange={checkAll}\n        checked={allCompleted}\n      />\n\n      { (todosLength > 0) && (\n        <label htmlFor=\"toggle-all\">\n          { allCompleted ? 'Set all to active' : 'Set all to completed' }\n        </label>\n      )}\n\n      <TodoList\n        todos={todos}\n        onCheck={onCheck}\n        onDelete={onDelete}\n      />\n    </section>\n  );\n};\n\nMain.propTypes = MainShape.isRequired;\n\nexport default Main;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { TodoFilterShape } from '../Shapes';\n\nconst TodoFilter = ({ onClick, children, filterType }) => (\n  <li>\n    <a\n      href={`#/${filterType === 'all' ? '' : filterType}`}\n      className={classnames({\n        selected: filterType === children.toLowerCase(),\n      })}\n      onClick={onClick}\n    >\n      {children}\n    </a>\n  </li>\n);\n\nTodoFilter.propTypes = TodoFilterShape.isRequired;\n\nexport default TodoFilter;\n","import React from 'react';\nimport TodoFilter from './TodoFilter';\nimport { FooterShape } from '../Shapes';\n\nexport const Footer = ({ todos, currentFilter, setFilter, onClear }) => {\n  const todosLeft = todos.filter(item => !item.completed).length;\n\n  return (\n    <>\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {\n            (todosLeft === 1)\n              ? `${todosLeft} todo to go`\n              : `${todosLeft} todos to go`\n          }\n        </span>\n\n        <ul className=\"filters\">\n          <TodoFilter\n            onClick={() => setFilter('all')}\n            filterType={currentFilter}\n          >\n            All\n          </TodoFilter>\n          <TodoFilter\n            onClick={() => setFilter('active')}\n            filterType={currentFilter}\n          >\n            Active\n          </TodoFilter>\n          <TodoFilter\n            onClick={() => setFilter('completed')}\n            filterType={currentFilter}\n          >\n            Completed\n          </TodoFilter>\n        </ul>\n\n        {todos.some(item => item.completed) && (\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={onClear}\n          >\n            Clear completed todos\n          </button>\n        )}\n      </footer>\n    </>\n  );\n};\n\nFooter.propTypes = FooterShape.isRequired;\n","import React from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport { Footer } from './components/Footer';\n\nconst filters = {\n  all: 'all',\n  completed: 'completed',\n  active: 'active',\n};\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    completed: false,\n    filter: filters.all,\n  };\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n    }));\n  };\n\n  checkSingleTodo = (todoId) => {\n    this.setState(({ todos }) => ({\n      todos: todos.map(item => (\n        item.id === todoId\n          ? {\n            ...item, completed: !item.completed,\n          } : item)),\n    }));\n\n    this.setState(({ todos }) => (\n      { completed: todos.every(item => item.completed) }\n    ));\n  };\n\n  checkAllTodos = () => {\n    this.setState(({ todos, completed }) => ({\n      completed: !completed,\n      todos: todos\n        .map(item => ({\n          ...item, completed: !completed,\n        })),\n    }));\n  };\n\n  deleteTodo = (todoId) => {\n    this.setState(({ todos }) => (\n      { todos: todos.filter(item => item.id !== todoId) }\n    ));\n  };\n\n  clearCompletedTodos = () => {\n    this.setState(({ todos }) => (\n      { todos: todos.filter(item => !(item.completed)) }\n    ));\n  };\n\n  setFilter = (filter) => {\n    this.setState({ filter: filters[filter] });\n  };\n\n  render() {\n    const { todos, completed, filter } = this.state;\n\n    const filteredTodos = (filterType) => {\n      switch (filterType) {\n        case 'active':\n          return todos.filter(todo => !todo.completed);\n        case 'completed':\n          return todos.filter(todo => todo.completed);\n        default:\n          return todos;\n      }\n    };\n\n    const visibleTodos = filteredTodos(filter);\n\n    return (\n      <section className=\"todoapp\">\n        <Header addTodo={this.addTodo} />\n        <Main\n          todos={visibleTodos}\n          completed={completed}\n          onCheck={this.checkSingleTodo}\n          onDelete={this.deleteTodo}\n          checkAll={this.checkAllTodos}\n          todosLength={todos.length}\n        />\n        {todos.length > 0 && (\n          <Footer\n            todos={todos}\n            currentFilter={filter}\n            setFilter={this.setFilter}\n            onClear={this.clearCompletedTodos}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}